{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/Ferlab-Ste-Justine/cnv-post-processing/master/nextflow_schema.json",
    "title": "Ferlab-Ste-Justine/cnv-post-processing pipeline parameters",
    "description": "Nextflow pipeline dedicated to the post-processing of Copy Number Variants (CNVs).",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "publish_all": {
                    "type": "boolean",
                    "default": false,
                    "description": "Publish all intermediate files to the output directory."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "data-test",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        },
        "exomiser_option": {
            "title": "Exomiser options",
            "type": "object",
            "description": "",
            "default": "",
            "required": ["exomiser_data_dir", "exomiser_data_version", "exomiser_genome"],
            "dependentRequired": {
                "exomiser_cadd_version": ["exomiser_cadd_snv_filename", "exomiser_cadd_indel_filename"],
                "exomiser_remm_version": ["exomiser_remm_filename"]
            },
            "properties": {
                "exomiser_analysis_wes": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the exomiser analysis file (.yml) to use for whole exome sequencing input",
                    "default": "${projectDir}/assets/exomiser/default_exomiser_WES_analysis.yml",
                    "pattern": "^\\S+\\.(yml|yaml|json){1}$",
                    "exists": true
                },
                "exomiser_analysis_wgs": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the exomiser analysis file (.yml) to use for whole genome sequencing input",
                    "default": "${projectDir}/assets/exomiser/default_exomiser_WGS_analysis.yml",
                    "pattern": "^\\S+\\.(yml|yaml|json){1}$",
                    "exists": true
                },
                "exomiser_data_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the  exomiser data directory"
                },
                "exomiser_data_version": {
                    "type": "string",
                    "description": "Exomiser data version"
                },
                "exomiser_genome": {
                    "type": "string",
                    "enum": ["hg38", "hg19"],
                    "description": "Genome assembly version to be used by exomiser (e.g., hg38 or hg19)"
                },
                "exomiser_cadd_version": {
                    "type": "string",
                    "description": "Version of cadd data"
                },
                "exomiser_cadd_indel_filename": {
                    "type": "string",
                    "format": "file-path",
                    "description": "The filename of the exomiser CADD indel data file (e.g., gnomad.genomes.r4.0.indel.tsv.gz)",
                    "pattern": "^\\S+\\.tsv.gz$"
                },
                "exomiser_cadd_snv_filename": {
                    "type": "string",
                    "description": "The filename of the exomiser CADD snv data file (e.g., whole_genome_SNVs.tsv.gz)",
                    "format": "file-path",
                    "pattern": "^\\S+\\.tsv.gz$"
                },
                "exomiser_remm_version": {
                    "type": "string",
                    "description": "Version of remm data"
                },
                "exomiser_remm_filename": {
                    "type": "string",
                    "description": "The filename of the exomiser REMM data file (e.g., ReMM.v0.3.1.post1.hg38.tsv.gz)",
                    "format": "file-path",
                    "pattern": "^\\S+\\.tsv.gz$"
                },
                "exomiser_local_frequency_path": {
                    "type": "string",
                    "description": "Path to the local frequency data file",
                    "format": "file-path",
                    "pattern": "^\\S+\\.tsv.gz$"
                },
                "exomiser_local_frequency_index_path": {
                    "type": "string",
                    "description": "Path to the index of the local frequency data file",
                    "format": "file-path",
                    "pattern": "^\\S+\\.tbi$"
                },
                "exomiser_outdir": {
                    "type": "string",
                    "description": "When specified, publishes the exomiser output to this folder",
                    "format": "directory-path",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        },
        {
            "$ref": "#/$defs/exomiser_option"
        }
    ]
}
